{"version":3,"file":"testing.js","sources":["../../../../../../packages/common/testing/src/location_mock.ts","../../../../../../packages/common/testing/src/mock_location_strategy.ts","../../../../../../packages/common/testing/src/mock_platform_location.ts","../../../../../../packages/common/testing/src/testing.ts","../../../../../../packages/common/testing/public_api.ts","../../../../../../packages/common/testing/index.ts","../../../../../../packages/common/testing/testing.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;;AACA;AAC2B,IAD3B,MACa,WAAW;AAAG,QAD3B;AACE,YACA,eAAU,GAAa,EAAE,CAAC;AAC5B,YAAU,aAAQ,GAAoB,CAAC,IAAI,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AACxE,YAAU,kBAAa,GAAW,CAAC,CAAC;AACpC;AACU,YAAR,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AACnD;AACU,YAAR,cAAS,GAAW,EAAE,CAAC;AACzB;AACU,YAAR,sBAAiB,GAAqB,IAAK,CAAC;AAC9C;AACU,YAAR,sBAAiB,GAAqB,IAAK,CAAC;AAC9C;AACU,YAAR,wBAAmB,GAA8C,EAAE,CAAC;AACtE,SAqHC;AACD,QAnHE,cAAc,CAAC,GAAW;AAC5B,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;AACjD,SAAG;AACH,QACE,WAAW,CAAC,GAAW;AACzB,YAAI,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACzB,SAAG;AACH,QACE,IAAI;AAAK,YACP,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;AAClD,SAAG;AACH,QACE,QAAQ;AAAK,YACX,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;AACnD,SAAG;AACH,QACE,oBAAoB,CAAC,IAAY,EAAE,QAAgB,EAAE;AAAI,YACvD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AACrF,YAAI,MAAM,QAAQ,GACV,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AACnG,YACI,OAAO,QAAQ,IAAI,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC;AAC3E,SAAG;AACH,QACE,cAAc,CAAC,QAAgB;AACjC,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC;AAC3E,SAAG;AACH,QACE,kBAAkB,CAAC,QAAgB;AACrC;AACQ,YAAJ,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAClC,YAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;AAC9C,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,CAAC,CAAC;AAC7E,SAAG;AACH,QACE,kBAAkB,CAAC,GAAW;AAAI,YAChC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAChD,gBAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtB,aAAK;AACL,YAAI,OAAO,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AAChC,SAAG;AACH,QACE,EAAE,CAAC,IAAY,EAAE,QAAgB,EAAE,EAAE,QAAa,IAAI;AACxD,YAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACzC,YACI,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;AAChC,gBAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;AACnD,aAAK;AACL,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9D,YAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AAClD,YACI,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;AAChE,YAAI,IAAI,aAAa,CAAC,IAAI,IAAI,IAAI,IAAI,aAAa,CAAC,KAAK,IAAI,KAAK,EAAE;AACpE,gBAAM,OAAO;AACb,aAAK;AACL,YACI,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC;AAC/D,YAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9B,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;AACnD,SAAG;AACH,QACE,YAAY,CAAC,IAAY,EAAE,QAAgB,EAAE,EAAE,QAAa,IAAI;AAClE,YAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACzC,YACI,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACtD,YAAI,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,IAAI,KAAK,EAAE;AACxD,gBAAM,OAAO;AACb,aAAK;AACL,YACI,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACxB,YAAI,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1B,YAAI,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1B,YACI,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC;AAC/D,YAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;AAC5C,SAAG;AACH,QACE,OAAO;AACT,YAAI,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AACzD,gBAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC3B,gBAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;AACtF,aAAK;AACL,SAAG;AACH,QACE,IAAI;AACN,YAAI,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;AAChC,gBAAM,IAAI,CAAC,aAAa,EAAE,CAAC;AAC3B,gBAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;AACtF,aAAK;AACL,SAAG;AACH,QAAE,WAAW,CAAC,EAAyC;AACvD,YAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtC,YACI,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;AACtC,gBAAM,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AACpD,oBAAQ,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AACvD,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AACH;AAEK,QAAH,yBAAyB,CAAC,MAAc,EAAE,EAAE,KAAc;AAC5D,YAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3D,SAAG;AACH,QACE,SAAS,CACL,MAA4B,EAAE,OAAqC,EACnE,QAA4B;AAAI,YAClC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;AACvF,SAAG;AACH,QACE,SAAS,CAAC,GAAW;AAAI,YACvB,OAAO,IAAK,CAAC;AACjB,SAAG;AACH;+CApIC,UAAU;;;;gDACL;AAAC,IAmIP,kBAAC;AAED,KAFC;AAED,MAAM,aAAa;AACnB,IAAE,YAAmB,IAAY,EAAS,KAAa,EAAS,KAAU;AAAI,QAAzD,SAAI,GAAJ,IAAI,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAQ;AAAC,QAAQ,UAAK,GAAL,KAAK,CAAK;AAAC,KAAG;AAC9E,CAAC;AACD;AC1JA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACoC,IADpC,MACa,oBAAqB,SAAQ,gBAAgB;AAC1D,QAOE;AACF,YAAI,KAAK,EAAE,CAAC;AACZ,YATE,qBAAgB,GAAW,GAAG,CAAC;AACjC,YAAE,iBAAY,GAAW,GAAG,CAAC;AAC7B,YAAE,kBAAa,GAAW,EAAE,CAAC;AAC7B,YAAE,eAAU,GAAa,EAAE,CAAC;AAC5B;AACU,YAAR,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AACnD,YAAU,iBAAY,GAAU,EAAE,CAAC;AACnC,SAEG;AACH,QACE,gBAAgB,CAAC,GAAW;AAAI,YAC9B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAC5B,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC5D,SAAG;AACH,QACE,IAAI,CAAC,cAAuB,KAAK;AAAI,YACnC,OAAO,IAAI,CAAC,YAAY,CAAC;AAC7B,SAAG;AACH,QACE,kBAAkB,CAAC,QAAgB;AAAI,YACrC,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACzE,gBAAM,OAAO,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3D,aAAK;AACL,YAAI,OAAO,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AAC5C,SAAG;AACH,QACE,SAAS,CAAC,GAAQ,EAAE,KAAa,EAAE,IAAY,EAAE,KAAa;AAAI;AAElE,YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC,YACI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,YACI,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC;AAC/D,YAAI,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAC5B,YACI,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;AACrD,YAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtC,SAAG;AACH,QACE,YAAY,CAAC,GAAQ,EAAE,KAAa,EAAE,IAAY,EAAE,KAAa;AAAI;AAErE,YAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;AACjE,YACI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC/B,YACI,MAAM,GAAG,GAAG,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC;AAC/D,YAAI,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAC5B,YACI,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;AACrD,YAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC;AACpD,SAAG;AACH,QACE,UAAU,CAAC,EAAwB;AAAI,YACrC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,EAAE,EAAC,CAAC,CAAC;AACxC,SAAG;AACH,QACE,WAAW;AAAK,YACd,OAAO,IAAI,CAAC,gBAAgB,CAAC;AACjC,SAAG;AACH,QACE,IAAI;AAAK,YACP,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACpC,gBAAM,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;AAC5B,gBAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;AAC9B,gBAAM,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACpG,gBAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACrC,aAAK;AACL,SAAG;AACH,QACE,OAAO;AAAK,YACV,MAAM,iBAAiB,CAAC;AAC5B,SAAG;AACH,QACE,QAAQ;AAAK,YACX,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAClE,SAAG;AACH;wDA/EC,UAAU;wJACL;AAAC;;;gDAAmD;AAAC,IA8E3D,2BAAC;AAED,KAFC;AAED,MAAM,kBAAkB;AACxB,IAEE,YAAmB,MAAc;AAAI,QAAlB,WAAM,GAAN,MAAM,CAAQ;AAAC,QAFlC,QAAG,GAAY,IAAI,CAAC;AACtB,QAAE,SAAI,GAAW,UAAU,CAAC;AAC5B,KAAuC;AACvC,CAAC;AACD;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,GAAG,+DAA+D,CAAC;AAEjF,SAAS,QAAQ,CAAC,MAAc,EAAE,QAAgB;AAClD,IAAE,MAAM,cAAc,GAAG,wBAAwB,CAAC;AAClD,IAAE,IAAI,UAA4B,CAAC;AACnC;AAEC;AACE,IAAD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACpC,QAAI,UAAU,GAAG,mBAAmB,CAAC;AACrC,KAAG;AACH,IAAE,IAAI,SAOH,CAAC;AACJ,IAAE,IAAI;AACN,QAAI,SAAS,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAC5C,KAAG;AAAC,IAAA,OAAO,CAAC,EAAE;AACd,QAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC;AAC5D,QAAI,IAAI,CAAC,MAAM,EAAE;AACjB,YAAM,MAAM,IAAI,KAAK,CAAC,gBAAgB,MAAM,eAAe,QAAQ,EAAE,CAAC,CAAC;AACvE,SAAK;AACL,QAAI,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3C,QAAI,SAAS,GAAG;AAChB,YAAM,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;AACzB,YAAM,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;AAC5B,YAAM,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE;AAC9B,YAAM,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;AACzB,YAAM,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AACvB,YAAM,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;AACrB,SAAK,CAAC;AACN,KAAG;AACH,IAAE,IAAI,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AACxE,QAAI,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACvE,KAAG;AACH,IAAE,OAAO;AACT,QAAI,QAAQ,EAAE,CAAC,UAAU,IAAI,SAAS,CAAC,QAAQ,IAAI,EAAE;AACrD,QAAI,QAAQ,EAAE,CAAC,UAAU,IAAI,SAAS,CAAC,QAAQ,IAAI,EAAE;AACrD,QAAI,IAAI,EAAE,CAAC,UAAU,IAAI,SAAS,CAAC,IAAI,IAAI,EAAE;AAC7C,QAAI,QAAQ,EAAE,SAAS,CAAC,QAAQ,IAAI,GAAG;AACvC,QAAI,MAAM,EAAE,SAAS,CAAC,MAAM,IAAI,EAAE;AAClC,QAAI,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,EAAE;AAC9B,KAAG,CAAC;AACJ,CAAC;AACD;AACG;AAGM;AAAG;AAEJ;AAUR,MAAa,6BAA6B,GACtC,IAAI,cAAc,CAA6B,+BAA+B,CAAC,CAAC;AACpF;AACG;AACiC;AAClC;AACW;AAEb;AACoC,IADpC,MACa,oBAAoB;AAAG,QAalC,YAA+D,MACrB;AAC5C,YAdU,aAAQ,GAAW,EAAE,CAAC;AAChC,YAAU,eAAU,GAAG,IAAI,OAAO,EAAuB,CAAC;AAC1D,YAAU,eAAU,GAQZ,CAAC,EAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;AACnG,YAGI,IAAI,MAAM,EAAE;AAChB,gBAAM,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC;AAC/C,gBACM,MAAM,aAAa,GACf,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvF,gBAAM,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,qBAAO,aAAa,CAAC,CAAC;AAC9C,aAAK;AACL,SAAG;AACH,QACE,IAAI,QAAQ;AACd,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AACvC,SAAG;AACH,QAAE,IAAI,QAAQ;AACd,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AACvC,SAAG;AACH,QAAE,IAAI,IAAI;AACV,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACnC,SAAG;AACH,QAAE,IAAI,QAAQ;AACd,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AACvC,SAAG;AACH,QAAE,IAAI,MAAM;AACZ,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACrC,SAAG;AACH,QAAE,IAAI,IAAI;AACV,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACnC,SAAG;AACH,QAAE,IAAI,KAAK;AACX,YAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACpC,SAAG;AACH,QAEE,kBAAkB;AAAK,YACrB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,SAAG;AACH,QACE,UAAU,CAAC,EAA0B;AAAI;AAEzC;AAGG,SAFF;AACH,QACE,YAAY,CAAC,EAA0B;AAAI,YACzC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAClC,SAAG;AACH,QACE,IAAI,IAAI;AAAK,YACX,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC;AACtF,YAAI,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,KAAK,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AACrF,YAAI,OAAO,GAAG,CAAC;AACf,SAAG;AACH,QACE,IAAI,GAAG;AAAK,YACV,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AACxD,SAAG;AACH,QACU,YAAY,CAAC,KAAc,EAAE,GAAW,EAAE,WAAmB,EAAE;AACzE;AACQ,YAAJ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9C,YAAI,uCAAW,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAE,KAAK,IAAE;AAC/C,SAAG;AACH,QACE,YAAY,CAAC,KAAU,EAAE,KAAa,EAAE,MAAc;AAAI,YACxD,MAAM,EAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC1F,YACI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,mCAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,GAAC,CAAC;AAC7F,SAAG;AACH,QACE,SAAS,CAAC,KAAU,EAAE,KAAa,EAAE,MAAc;AAAI,YACrD,MAAM,EAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC1F,YAAI,IAAI,CAAC,UAAU,CAAC,OAAO,iCAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,IAAE,CAAC;AACjG,SAAG;AACH,QACE,OAAO;AAAK,YACV,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACvC,SAAG;AACH,QACE,IAAI;AAAK,YACP,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;AAC5B,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9B,YAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC5B,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9B,YACI,IAAI,OAAO,KAAK,OAAO,EAAE;AAC7B,gBAAM,iBAAiB,CACb,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CACtB,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAwB,CAAC,CAAC,CAAC;AACnG,aAAK;AACL,SAAG;AACH,QACE,QAAQ;AAAK,YACX,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,SAAG;AACH;wDA5GC,UAAU;wJACL;AAAC;AAAkD,gDAa1C,MAAM,SAAC,6BAA6B,cAAG,QAAQ;AAAM;;;;;;;;kCACpE;AAAC,IA6FD,2BAAC;AAED,KAFC;AACD,SACgB,iBAAiB,CAAC,EAAa;AAC/C,IAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjC,CAAC;AACD;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AASA,0EAA0E;AAC1E;AChBA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;ACPA;AACA;AACA,GAAG;AACH;AACA;AAC0E","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy, PlatformLocation} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {SubscriptionLike} from 'rxjs';\n\n/**\n * A spy for {@link Location} that allows tests to fire simulated location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class SpyLocation implements Location {\n  urlChanges: string[] = [];\n  private _history: LocationState[] = [new LocationState('', '', null)];\n  private _historyIndex: number = 0;\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  /** @internal */\n  _baseHref: string = '';\n  /** @internal */\n  _platformStrategy: LocationStrategy = null!;\n  /** @internal */\n  _platformLocation: PlatformLocation = null!;\n  /** @internal */\n  _urlChangeListeners: ((url: string, state: unknown) => void)[] = [];\n  /** @internal */\n  _urlChangeSubscription?: SubscriptionLike;\n\n  setInitialPath(url: string) {\n    this._history[this._historyIndex].path = url;\n  }\n\n  setBaseHref(url: string) {\n    this._baseHref = url;\n  }\n\n  path(): string {\n    return this._history[this._historyIndex].path;\n  }\n\n  getState(): unknown {\n    return this._history[this._historyIndex].state;\n  }\n\n  isCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    const givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n    const currPath =\n        this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\n\n    return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\n  }\n\n  simulateUrlPop(pathname: string) {\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'popstate'});\n  }\n\n  simulateHashChange(pathname: string) {\n    // Because we don't prevent the native event, the browser will independently update the path\n    this.setInitialPath(pathname);\n    this.urlChanges.push('hash: ' + pathname);\n    this._subject.emit({'url': pathname, 'pop': true, 'type': 'hashchange'});\n  }\n\n  prepareExternalUrl(url: string): string {\n    if (url.length > 0 && !url.startsWith('/')) {\n      url = '/' + url;\n    }\n    return this._baseHref + url;\n  }\n\n  go(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    if (this._historyIndex > 0) {\n      this._history.splice(this._historyIndex + 1);\n    }\n    this._history.push(new LocationState(path, query, state));\n    this._historyIndex = this._history.length - 1;\n\n    const locationState = this._history[this._historyIndex - 1];\n    if (locationState.path == path && locationState.query == query) {\n      return;\n    }\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push(url);\n    this._subject.emit({'url': url, 'pop': false});\n  }\n\n  replaceState(path: string, query: string = '', state: any = null) {\n    path = this.prepareExternalUrl(path);\n\n    const history = this._history[this._historyIndex];\n    if (history.path == path && history.query == query) {\n      return;\n    }\n\n    history.path = path;\n    history.query = query;\n    history.state = state;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.urlChanges.push('replace: ' + url);\n  }\n\n  forward() {\n    if (this._historyIndex < (this._history.length - 1)) {\n      this._historyIndex++;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n\n  back() {\n    if (this._historyIndex > 0) {\n      this._historyIndex--;\n      this._subject.emit({'url': this.path(), 'state': this.getState(), 'pop': true});\n    }\n  }\n  onUrlChange(fn: (url: string, state: unknown) => void) {\n    this._urlChangeListeners.push(fn);\n\n    if (!this._urlChangeSubscription) {\n      this._urlChangeSubscription = this.subscribe(v => {\n        this._notifyUrlChangeListeners(v.url, v.state);\n      });\n    }\n  }\n\n  /** @internal */\n  _notifyUrlChangeListeners(url: string = '', state: unknown) {\n    this._urlChangeListeners.forEach(fn => fn(url, state));\n  }\n\n  subscribe(\n      onNext: (value: any) => void, onThrow?: ((error: any) => void)|null,\n      onReturn?: (() => void)|null): SubscriptionLike {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n\n  normalize(url: string): string {\n    return null!;\n  }\n}\n\nclass LocationState {\n  constructor(public path: string, public query: string, public state: any) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {EventEmitter, Injectable} from '@angular/core';\n\n\n\n/**\n * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\n * location events.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockLocationStrategy extends LocationStrategy {\n  internalBaseHref: string = '/';\n  internalPath: string = '/';\n  internalTitle: string = '';\n  urlChanges: string[] = [];\n  /** @internal */\n  _subject: EventEmitter<any> = new EventEmitter();\n  private stateChanges: any[] = [];\n  constructor() {\n    super();\n  }\n\n  simulatePopState(url: string): void {\n    this.internalPath = url;\n    this._subject.emit(new _MockPopStateEvent(this.path()));\n  }\n\n  path(includeHash: boolean = false): string {\n    return this.internalPath;\n  }\n\n  prepareExternalUrl(internal: string): string {\n    if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\n      return this.internalBaseHref + internal.substring(1);\n    }\n    return this.internalBaseHref + internal;\n  }\n\n  pushState(ctx: any, title: string, path: string, query: string): void {\n    // Add state change to changes array\n    this.stateChanges.push(ctx);\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push(externalUrl);\n  }\n\n  replaceState(ctx: any, title: string, path: string, query: string): void {\n    // Reset the last index of stateChanges to the ctx (state) object\n    this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\n\n    this.internalTitle = title;\n\n    const url = path + (query.length > 0 ? ('?' + query) : '');\n    this.internalPath = url;\n\n    const externalUrl = this.prepareExternalUrl(url);\n    this.urlChanges.push('replace: ' + externalUrl);\n  }\n\n  onPopState(fn: (value: any) => void): void {\n    this._subject.subscribe({next: fn});\n  }\n\n  getBaseHref(): string {\n    return this.internalBaseHref;\n  }\n\n  back(): void {\n    if (this.urlChanges.length > 0) {\n      this.urlChanges.pop();\n      this.stateChanges.pop();\n      const nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\n      this.simulatePopState(nextUrl);\n    }\n  }\n\n  forward(): void {\n    throw 'not implemented';\n  }\n\n  getState(): unknown {\n    return this.stateChanges[(this.stateChanges.length || 1) - 1];\n  }\n}\n\nclass _MockPopStateEvent {\n  pop: boolean = true;\n  type: string = 'popstate';\n  constructor(public newUrl: string) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n *\n * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\n *\n * Results in:\n *\n * $1 = http:\n * $2 = http\n * $3 = //www.ics.uci.edu\n * $4 = www.ics.uci.edu\n * $5 = /pub/ietf/uri/\n * $6 = <undefined>\n * $7 = <undefined>\n * $8 = #Related\n * $9 = Related\n */\nconst urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\nfunction parseUrl(urlStr: string, baseHref: string) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase: string|undefined;\n\n  // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\n  // an arbitrary base URL which can be removed afterward.\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n  let parsedUrl: {\n    protocol: string,\n    hostname: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string\n  };\n  try {\n    parsedUrl = new URL(urlStr, serverBase);\n  } catch (e) {\n    const result = urlParse.exec(serverBase || '' + urlStr);\n    if (!result) {\n      throw new Error(`Invalid URL: ${urlStr} with base: ${baseHref}`);\n    }\n    const hostSplit = result[4].split(':');\n    parsedUrl = {\n      protocol: result[1],\n      hostname: hostSplit[0],\n      port: hostSplit[1] || '',\n      pathname: result[5],\n      search: result[6],\n      hash: result[8],\n    };\n  }\n  if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\n    parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\n  }\n  return {\n    hostname: !serverBase && parsedUrl.hostname || '',\n    protocol: !serverBase && parsedUrl.protocol || '',\n    port: !serverBase && parsedUrl.port || '',\n    pathname: parsedUrl.pathname || '/',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n\n/**\n * Mock platform location config\n *\n * @publicApi\n */\nexport interface MockPlatformLocationConfig {\n  startUrl?: string;\n  appBaseHref?: string;\n}\n\n/**\n * Provider for mock platform location config\n *\n * @publicApi\n */\nexport const MOCK_PLATFORM_LOCATION_CONFIG =\n    new InjectionToken<MockPlatformLocationConfig>('MOCK_PLATFORM_LOCATION_CONFIG');\n\n/**\n * Mock implementation of URL state.\n *\n * @publicApi\n */\n@Injectable()\nexport class MockPlatformLocation implements PlatformLocation {\n  private baseHref: string = '';\n  private hashUpdate = new Subject<LocationChangeEvent>();\n  private urlChanges: {\n    hostname: string,\n    protocol: string,\n    port: string,\n    pathname: string,\n    search: string,\n    hash: string,\n    state: unknown\n  }[] = [{hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null}];\n\n  constructor(@Inject(MOCK_PLATFORM_LOCATION_CONFIG) @Optional() config?:\n                  MockPlatformLocationConfig) {\n    if (config) {\n      this.baseHref = config.appBaseHref || '';\n\n      const parsedChanges =\n          this.parseChanges(null, config.startUrl || 'http://<empty>/', this.baseHref);\n      this.urlChanges[0] = {...parsedChanges};\n    }\n  }\n\n  get hostname() {\n    return this.urlChanges[0].hostname;\n  }\n  get protocol() {\n    return this.urlChanges[0].protocol;\n  }\n  get port() {\n    return this.urlChanges[0].port;\n  }\n  get pathname() {\n    return this.urlChanges[0].pathname;\n  }\n  get search() {\n    return this.urlChanges[0].search;\n  }\n  get hash() {\n    return this.urlChanges[0].hash;\n  }\n  get state() {\n    return this.urlChanges[0].state;\n  }\n\n\n  getBaseHrefFromDOM(): string {\n    return this.baseHref;\n  }\n\n  onPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n\n  onHashChange(fn: LocationChangeListener): void {\n    this.hashUpdate.subscribe(fn);\n  }\n\n  get href(): string {\n    let url = `${this.protocol}//${this.hostname}${this.port ? ':' + this.port : ''}`;\n    url += `${this.pathname === '/' ? '' : this.pathname}${this.search}${this.hash}`;\n    return url;\n  }\n\n  get url(): string {\n    return `${this.pathname}${this.search}${this.hash}`;\n  }\n\n  private parseChanges(state: unknown, url: string, baseHref: string = '') {\n    // When the `history.state` value is stored, it is always copied.\n    state = JSON.parse(JSON.stringify(state));\n    return {...parseUrl(url, baseHref), state};\n  }\n\n  replaceState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n\n    this.urlChanges[0] = {...this.urlChanges[0], pathname, search, hash, state: parsedState};\n  }\n\n  pushState(state: any, title: string, newUrl: string): void {\n    const {pathname, search, state: parsedState, hash} = this.parseChanges(state, newUrl);\n    this.urlChanges.unshift({...this.urlChanges[0], pathname, search, hash, state: parsedState});\n  }\n\n  forward(): void {\n    throw new Error('Not implemented');\n  }\n\n  back(): void {\n    const oldUrl = this.url;\n    const oldHash = this.hash;\n    this.urlChanges.shift();\n    const newHash = this.hash;\n\n    if (oldHash !== newHash) {\n      scheduleMicroTask(\n          () => this.hashUpdate.next(\n              {type: 'hashchange', state: null, oldUrl, newUrl: this.url} as LocationChangeEvent));\n    }\n  }\n\n  getState(): unknown {\n    return this.state;\n  }\n}\n\nexport function scheduleMicroTask(cb: () => any) {\n  Promise.resolve(null).then(cb);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common/testing package.\n */\nexport {SpyLocation} from './location_mock';\nexport {MockLocationStrategy} from './mock_location_strategy';\nexport {MOCK_PLATFORM_LOCATION_CONFIG, MockPlatformLocation, MockPlatformLocationConfig} from './mock_platform_location';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}